pred_cond_summary = colMeans(pred_cond_stat[,-1])
# like
like_df <-data.frame("nn" = apply(pred_val, 1, function(x)loglik_clayton(link_clayton(x), get(paste0("copula_uu_clayton_",i))[,1], get(paste0("copula_uu_clayton_",i))[,2])))
like_df$idx <- rep(1:n.iter_par, n.chain_par)
like_df$chain <- rep(1:n.chain_par, each = n.iter_par)
pl_like <- like_df %>%
# filter(idx > n.born.out.par) %>%
ggplot(aes(x = idx, y = nn, color = factor(chain))) +
geom_line() +
labs(
x = "Iteration",
y = "Log-likelihood"
) +
guides(color = "none") +
theme_minimal()
library(patchwork)
pl_like +pl_pred
# nterm
nt_lb.df <- nterm_BART(model)
nt_lb.df$idx <- rep(1:n.iter_par, n.chain_par)
nt_lb.df$chain <- rep(1:n.chain_par, each = n.iter_par)
pl_nl <- nt_lb.df %>%
# filter(idx > n.born.out.par) %>%
ggplot(aes(x = idx, y = nn, color = factor(chain))) +
geom_line() +
labs(
x = "Iteration",
y = "nterm"
) +
guides(color = "none") +
theme_minimal()
pl_nl
# depth
depth_lb.df <- depth_BART(model)
depth_lb.df$idx <- rep(1:n.iter_par, n.chain_par)
depth_lb.df$chain <- rep(1:n.chain_par, each = n.iter_par)
pl_dp <- depth_lb.df %>%
# filter(idx > n.born.out.par) %>%
ggplot(aes(x = idx, y = nn, color = factor(chain))) +
geom_line() +
labs(
x = "Iteration",
y = "depth"
) +
guides(color = "none") +
theme_minimal()
pl_dp
pl_nl + pl_dp
# acceptance
acc_lb.df <- acc_BART(model)
tree_stat_summary = c(mean(nt_lb.df$nn), mean(depth_lb.df$nn), mean(acc_lb.df$nn==TRUE))
names(tree_stat_summary) <- c("nterm", "depth", "acc")
xtable(t(as.matrix(c(tree_stat_summary, pred_cond_summary))), digits = 4)
# conv_diag_sum <- cbind(conv_diag(depth_lb.df,n.born.out.par,10), conv_diag(nt_lb.df, n.born.out.par,10), conv_diag(like_df,n.born.out.par,10))
# xtable(conv_diag_sum)
# stat_list_adapt <- list("pred" = pred_cond_summary, "tree" = tree_stat_summary)
# plot_list_adapt <- list("like" = pl_like, "pred" = pl_pred, "depth" = pl_dp, "nterm" = pl_nl)
# save(stat_list_adapt, file = paste0("clayton_mcmc_",test_case,"_tree_",n.tree, "_stat_adapt.Rdata"))
# save(plot_list_adapt, file = paste0("clayton_mcmc_",test_case,"_tree_",n.tree, "_plot_adapt.Rdata"))
stat_list <- list("pred" = pred_cond_summary, "tree" = tree_stat_summary)
plot_list <- list("like" = pl_like, "pred" = pl_pred, "depth" = pl_dp, "nterm" = pl_nl)
save(stat_list, file = paste0("clayton_mcmc_",test_case,"_tree_",n.tree, "_stat.Rdata"))
save(plot_list, file = paste0("clayton_mcmc_",test_case,"_tree_",n.tree, "_plot.Rdata"))
}
pl_nl + pl_dp
pl_like +pl_pred
if(T){
test_case = 1
# model <- get(load(paste0("t_mcmc_",test_case,"_tree_",n.tree,"_adapt", ".Rdata")))
# rm(list = paste0("t_mcmc_",test_case,"_tree_",n.tree,"_adapt"))
model <- get(load(paste0("t_mcmc_",test_case,"_tree_",n.tree, ".Rdata")))
rm(list = paste0("t_mcmc_",test_case,"_tree_",n.tree))
list_pred_lb <- lapply(1:length(model$trees), \(idx) BART_calculate_pred(model$trees[[idx]], X_obs.norm))
pred_val = do.call(rbind,list_pred_lb)
rm(list_pred_lb)
pred_cond <- data.frame("obs" = rep(X_obs.norm, each = (n.chain_par * n.iter_par)))
pred_cond$theta_true = rep((get(paste0("tau_true_",test_case))), each = (n.chain_par * (n.iter_par)))
pred_cond$y = BiCopPar2Tau(2,link_t(as.vector(pred_val)))
pred_cond$chain = rep(rep(1:n.chain_par, each = n.iter_par),n)
pred_cond$idx = rep(rep(1:n.iter_par, n.chain_par),n)
pred_cond_mod = pred_cond %>%
filter(idx > n.born.out.par) %>%
group_by(obs, chain, theta_true) %>%
summarise(theta_mean = mean(y), theta_q975 = quantile(y, .975), theta_q025 = quantile(y, .025))
pred_cond_mod_avg = pred_cond_mod %>%
group_by(obs, theta_true) %>%
summarise(theta_mean = mean(theta_mean), theta_q975 = mean(theta_q975), theta_q025 = mean(theta_q025))
pl_pred <- ggplot(pred_cond_mod_avg) +
geom_point(aes(obs, theta_true), col = 2) +
geom_line(aes(obs, theta_mean)) +
geom_line(aes(obs, theta_q975), col = 3) +
geom_line(aes(obs, theta_q025), col = 3) +
xlab('X') +
ylab('estimated tau') +
theme_classic()
pred_cond_stat = pred_cond_mod_avg %>%
mutate(RMSE = ((theta_true - theta_mean)^2)) %>%
mutate(CI.length = (theta_q975 - theta_q025)) %>%
mutate(CI.cov = ((theta_true < theta_q975) & (theta_true > theta_q025))) %>%
dplyr::select(c(RMSE, CI.length, CI.cov))
pred_cond_summary = colMeans(pred_cond_stat[,-1])
# like
like_df <-data.frame("nn" = apply(pred_val, 1, function(x)loglik_t(link_t(x), get(paste0("copula_uu_t_",i))[,1], get(paste0("copula_uu_t_",i))[,2])))
like_df$idx <- rep(1:n.iter_par, n.chain_par)
like_df$chain <- rep(1:n.chain_par, each = n.iter_par)
pl_like <- like_df %>%
# filter(idx > n.born.out.par) %>%
ggplot(aes(x = idx, y = nn, color = factor(chain))) +
geom_line() +
labs(
x = "Iteration",
y = "Log-likelihood"
) +
guides(color = "none") +
theme_minimal()
library(patchwork)
pl_like +pl_pred
# nterm
nt_lb.df <- nterm_BART(model)
nt_lb.df$idx <- rep(1:n.iter_par, n.chain_par)
nt_lb.df$chain <- rep(1:n.chain_par, each = n.iter_par)
pl_nl <- nt_lb.df %>%
# filter(idx > n.born.out.par) %>%
ggplot(aes(x = idx, y = nn, color = factor(chain))) +
geom_line() +
labs(
x = "Iteration",
y = "nterm"
) +
guides(color = "none") +
theme_minimal()
pl_nl
# depth
depth_lb.df <- depth_BART(model)
depth_lb.df$idx <- rep(1:n.iter_par, n.chain_par)
depth_lb.df$chain <- rep(1:n.chain_par, each = n.iter_par)
pl_dp <- depth_lb.df %>%
# filter(idx > n.born.out.par) %>%
ggplot(aes(x = idx, y = nn, color = factor(chain))) +
geom_line() +
labs(
x = "Iteration",
y = "depth"
) +
guides(color = "none") +
theme_minimal()
pl_dp
pl_nl + pl_dp
# acceptance
acc_lb.df <- acc_BART(model)
tree_stat_summary = c(mean(nt_lb.df$nn), mean(depth_lb.df$nn), mean(acc_lb.df$nn==TRUE))
names(tree_stat_summary) <- c("nterm", "depth", "acc")
xtable(t(as.matrix(c(tree_stat_summary, pred_cond_summary))), digits = 4)
# conv_diag_sum <- cbind(conv_diag(depth_lb.df,n.born.out.par,10), conv_diag(nt_lb.df, n.born.out.par,10), conv_diag(like_df,n.born.out.par,10))
# xtable(conv_diag_sum)
# stat_list_adapt <- list("pred" = pred_cond_summary, "tree" = tree_stat_summary)
# plot_list_adapt <- list("like" = pl_like, "pred" = pl_pred, "depth" = pl_dp, "nterm" = pl_nl)
# save(stat_list_adapt, file = paste0("t_mcmc_",test_case,"_tree_",n.tree, "_stat_adapt.Rdata"))
# save(plot_list_adapt, file = paste0("t_mcmc_",test_case,"_tree_",n.tree, "_plot_adapt.Rdata"))
stat_list <- list("pred" = pred_cond_summary, "tree" = tree_stat_summary)
plot_list <- list("like" = pl_like, "pred" = pl_pred, "depth" = pl_dp, "nterm" = pl_nl)
save(stat_list, file = paste0("t_mcmc_",test_case,"_tree_",n.tree, "_stat.Rdata"))
save(plot_list, file = paste0("t_mcmc_",test_case,"_tree_",n.tree, "_plot.Rdata"))
}
pl_nl + pl_dp
pl_like +pl_pred
if(T){
test_case = 1
model <- get(load(paste0("gauss_mcmc_",test_case,"_tree_",n.tree,"_adapt", ".Rdata")))
rm(list = paste0("gauss_mcmc_",test_case,"_tree_",n.tree,"_adapt"))
# model <- get(load(paste0("gauss_mcmc_",test_case,"_tree_",n.tree, ".Rdata")))
# rm(list = paste0("gauss_mcmc_",test_case,"_tree_",n.tree))
list_pred_lb <- lapply(1:length(model$trees), \(idx) BART_calculate_pred(model$trees[[idx]], X_obs.norm))
pred_val = do.call(rbind,list_pred_lb)
rm(list_pred_lb)
pred_cond <- data.frame("obs" = rep(X_obs.norm, each = (n.chain_par * n.iter_par)))
pred_cond$theta_true = rep((get(paste0("tau_true_",test_case))), each = (n.chain_par * (n.iter_par)))
pred_cond$y = BiCopPar2Tau(1,link_gauss(as.vector(pred_val)))
pred_cond$chain = rep(rep(1:n.chain_par, each = n.iter_par),n)
pred_cond$idx = rep(rep(1:n.iter_par, n.chain_par),n)
pred_cond_mod = pred_cond %>%
filter(idx > n.born.out.par) %>%
group_by(obs, chain, theta_true) %>%
summarise(theta_mean = mean(y), theta_q975 = quantile(y, .975), theta_q025 = quantile(y, .025))
pred_cond_mod_avg = pred_cond_mod %>%
group_by(obs, theta_true) %>%
summarise(theta_mean = mean(theta_mean), theta_q975 = mean(theta_q975), theta_q025 = mean(theta_q025))
pl_pred <- ggplot(pred_cond_mod_avg) +
geom_point(aes(obs, theta_true), col = 2) +
geom_line(aes(obs, theta_mean)) +
geom_line(aes(obs, theta_q975), col = 3) +
geom_line(aes(obs, theta_q025), col = 3) +
xlab('X') +
ylab('estimated tau') +
theme_classic()
pred_cond_stat = pred_cond_mod_avg %>%
mutate(RMSE = ((theta_true - theta_mean)^2)) %>%
mutate(CI.length = (theta_q975 - theta_q025)) %>%
mutate(CI.cov = ((theta_true < theta_q975) & (theta_true > theta_q025))) %>%
dplyr::select(c(RMSE, CI.length, CI.cov))
pred_cond_summary = colMeans(pred_cond_stat[,-1])
# like
like_df <-data.frame("nn" = apply(pred_val, 1, function(x)loglik_gauss(link_gauss(x), get(paste0("copula_uu_gauss_",i))[,1], get(paste0("copula_uu_gauss_",i))[,2])))
like_df$idx <- rep(1:n.iter_par, n.chain_par)
like_df$chain <- rep(1:n.chain_par, each = n.iter_par)
pl_like <- like_df %>%
# filter(idx > n.born.out.par) %>%
ggplot(aes(x = idx, y = nn, color = factor(chain))) +
geom_line() +
labs(
x = "Iteration",
y = "Log-likelihood"
) +
guides(color = "none") +
theme_minimal()
library(patchwork)
pl_like +pl_pred
# nterm
nt_lb.df <- nterm_BART(model)
nt_lb.df$idx <- rep(1:n.iter_par, n.chain_par)
nt_lb.df$chain <- rep(1:n.chain_par, each = n.iter_par)
pl_nl <- nt_lb.df %>%
# filter(idx > n.born.out.par) %>%
ggplot(aes(x = idx, y = nn, color = factor(chain))) +
geom_line() +
labs(
x = "Iteration",
y = "nterm"
) +
guides(color = "none") +
theme_minimal()
pl_nl
# depth
depth_lb.df <- depth_BART(model)
depth_lb.df$idx <- rep(1:n.iter_par, n.chain_par)
depth_lb.df$chain <- rep(1:n.chain_par, each = n.iter_par)
pl_dp <- depth_lb.df %>%
# filter(idx > n.born.out.par) %>%
ggplot(aes(x = idx, y = nn, color = factor(chain))) +
geom_line() +
labs(
x = "Iteration",
y = "depth"
) +
guides(color = "none") +
theme_minimal()
pl_dp
pl_nl + pl_dp
# acceptance
acc_lb.df <- acc_BART(model)
tree_stat_summary = c(mean(nt_lb.df$nn), mean(depth_lb.df$nn), mean(acc_lb.df$nn==TRUE))
names(tree_stat_summary) <- c("nterm", "depth", "acc")
xtable(t(as.matrix(c(tree_stat_summary, pred_cond_summary))), digits = 4)
# conv_diag_sum <- cbind(conv_diag(depth_lb.df,n.born.out.par,10), conv_diag(nt_lb.df, n.born.out.par,10), conv_diag(like_df,n.born.out.par,10))
# xtable(conv_diag_sum)
stat_list_adapt <- list("pred" = pred_cond_summary, "tree" = tree_stat_summary)
plot_list_adapt <- list("like" = pl_like, "pred" = pl_pred, "depth" = pl_dp, "nterm" = pl_nl)
save(stat_list_adapt, file = paste0("gauss_mcmc_",test_case,"_tree_",n.tree, "_stat_adapt.Rdata"))
save(plot_list_adapt, file = paste0("gauss_mcmc_",test_case,"_tree_",n.tree, "_plot_adapt.Rdata"))
# stat_list <- list("pred" = pred_cond_summary, "tree" = tree_stat_summary)
# plot_list <- list("like" = pl_like, "pred" = pl_pred, "depth" = pl_dp, "nterm" = pl_nl)
# save(stat_list, file = paste0("gauss_mcmc_",test_case,"_tree_",n.tree, "_stat.Rdata"))
# save(plot_list, file = paste0("gauss_mcmc_",test_case,"_tree_",n.tree, "_plot.Rdata"))
}
pl_nl + pl_dp
pl_like +pl_pred
plot_list_adapt$like
pl_like <- like_df %>%
# filter(idx > n.born.out.par) %>%
ggplot(aes(x = idx, y = nn, color = factor(chain))) +
geom_line() +
labs(
x = "Iteration",
y = "Log-likelihood"
) +
guides(color = "none") +
theme_minimal()
library(patchwork)
pl_like +pl_pred
if(T){
test_case = 1
# model <- get(load(paste0("gauss_mcmc_",test_case,"_tree_",n.tree,"_adapt", ".Rdata")))
# rm(list = paste0("gauss_mcmc_",test_case,"_tree_",n.tree,"_adapt"))
model <- get(load(paste0("gauss_mcmc_",test_case,"_tree_",n.tree, ".Rdata")))
rm(list = paste0("gauss_mcmc_",test_case,"_tree_",n.tree))
list_pred_lb <- lapply(1:length(model$trees), \(idx) BART_calculate_pred(model$trees[[idx]], X_obs.norm))
pred_val = do.call(rbind,list_pred_lb)
rm(list_pred_lb)
pred_cond <- data.frame("obs" = rep(X_obs.norm, each = (n.chain_par * n.iter_par)))
pred_cond$theta_true = rep((get(paste0("tau_true_",test_case))), each = (n.chain_par * (n.iter_par)))
pred_cond$y = BiCopPar2Tau(1,link_gauss(as.vector(pred_val)))
pred_cond$chain = rep(rep(1:n.chain_par, each = n.iter_par),n)
pred_cond$idx = rep(rep(1:n.iter_par, n.chain_par),n)
pred_cond_mod = pred_cond %>%
filter(idx > n.born.out.par) %>%
group_by(obs, chain, theta_true) %>%
summarise(theta_mean = mean(y), theta_q975 = quantile(y, .975), theta_q025 = quantile(y, .025))
pred_cond_mod_avg = pred_cond_mod %>%
group_by(obs, theta_true) %>%
summarise(theta_mean = mean(theta_mean), theta_q975 = mean(theta_q975), theta_q025 = mean(theta_q025))
pl_pred <- ggplot(pred_cond_mod_avg) +
geom_point(aes(obs, theta_true), col = 2) +
geom_line(aes(obs, theta_mean)) +
geom_line(aes(obs, theta_q975), col = 3) +
geom_line(aes(obs, theta_q025), col = 3) +
xlab('X') +
ylab('estimated tau') +
theme_classic()
pred_cond_stat = pred_cond_mod_avg %>%
mutate(RMSE = ((theta_true - theta_mean)^2)) %>%
mutate(CI.length = (theta_q975 - theta_q025)) %>%
mutate(CI.cov = ((theta_true < theta_q975) & (theta_true > theta_q025))) %>%
dplyr::select(c(RMSE, CI.length, CI.cov))
pred_cond_summary = colMeans(pred_cond_stat[,-1])
# like
like_df <-data.frame("nn" = apply(pred_val, 1, function(x)loglik_gauss(link_gauss(x), get(paste0("copula_uu_gauss_",i))[,1], get(paste0("copula_uu_gauss_",i))[,2])))
like_df$idx <- rep(1:n.iter_par, n.chain_par)
like_df$chain <- rep(1:n.chain_par, each = n.iter_par)
pl_like <- like_df %>%
# filter(idx > n.born.out.par) %>%
ggplot(aes(x = idx, y = nn, color = factor(chain))) +
geom_line() +
labs(
x = "Iteration",
y = "Log-likelihood"
) +
guides(color = "none") +
theme_minimal()
library(patchwork)
pl_like +pl_pred
# nterm
nt_lb.df <- nterm_BART(model)
nt_lb.df$idx <- rep(1:n.iter_par, n.chain_par)
nt_lb.df$chain <- rep(1:n.chain_par, each = n.iter_par)
pl_nl <- nt_lb.df %>%
# filter(idx > n.born.out.par) %>%
ggplot(aes(x = idx, y = nn, color = factor(chain))) +
geom_line() +
labs(
x = "Iteration",
y = "nterm"
) +
guides(color = "none") +
theme_minimal()
pl_nl
# depth
depth_lb.df <- depth_BART(model)
depth_lb.df$idx <- rep(1:n.iter_par, n.chain_par)
depth_lb.df$chain <- rep(1:n.chain_par, each = n.iter_par)
pl_dp <- depth_lb.df %>%
# filter(idx > n.born.out.par) %>%
ggplot(aes(x = idx, y = nn, color = factor(chain))) +
geom_line() +
labs(
x = "Iteration",
y = "depth"
) +
guides(color = "none") +
theme_minimal()
pl_dp
pl_nl + pl_dp
# acceptance
acc_lb.df <- acc_BART(model)
tree_stat_summary = c(mean(nt_lb.df$nn), mean(depth_lb.df$nn), mean(acc_lb.df$nn==TRUE))
names(tree_stat_summary) <- c("nterm", "depth", "acc")
xtable(t(as.matrix(c(tree_stat_summary, pred_cond_summary))), digits = 4)
# conv_diag_sum <- cbind(conv_diag(depth_lb.df,n.born.out.par,10), conv_diag(nt_lb.df, n.born.out.par,10), conv_diag(like_df,n.born.out.par,10))
# xtable(conv_diag_sum)
# stat_list_adapt <- list("pred" = pred_cond_summary, "tree" = tree_stat_summary)
# plot_list_adapt <- list("like" = pl_like, "pred" = pl_pred, "depth" = pl_dp, "nterm" = pl_nl)
# save(stat_list_adapt, file = paste0("gauss_mcmc_",test_case,"_tree_",n.tree, "_stat_adapt.Rdata"))
# save(plot_list_adapt, file = paste0("gauss_mcmc_",test_case,"_tree_",n.tree, "_plot_adapt.Rdata"))
stat_list <- list("pred" = pred_cond_summary, "tree" = tree_stat_summary)
plot_list <- list("like" = pl_like, "pred" = pl_pred, "depth" = pl_dp, "nterm" = pl_nl)
save(stat_list, file = paste0("gauss_mcmc_",test_case,"_tree_",n.tree, "_stat.Rdata"))
save(plot_list, file = paste0("gauss_mcmc_",test_case,"_tree_",n.tree, "_plot.Rdata"))
}
pl_like +pl_pred
pl_like +pl_pred
pl_nl + pl_dp
loglik_gauss(sin(get(paste0("tau_true_",i)) * pi/2),copula_uu_gauss_1[,1],copula_uu_gauss_1[,2])
loglik_gauss(sin(get(paste0("tau_true_",1)) * pi/2),copula_uu_gauss_1[,1],copula_uu_gauss_1[,2])
loglik_gauss(sin(get(paste0("tau_true_",1)) * pi/2),copula_uu_gauss_2[,1],copula_uu_gauss_2[,2])
nt_lb.df$nn
nt_lb.df$nn[nt_lb.df$idx > n.born.out.par]
mean(nt_lb.df$nn[nt_lb.df$idx > n.born.out.par])
mean(nt_lb.df$nn)
mean(depth_lb.df$nn[depth_lb.df$idx > n.born.out.par])
mean(depth_lb.df$nn)
mean(acc_lb.df$nn[acc_lb.df$idx > n.born.out.par]==TRUE)
acc_lb.df <- acc_BART(model)
mean(acc_lb.df$nn[acc_lb.df$idx > n.born.out.par]==TRUE)
acc_lb.df$idx <- rep(1:n.iter_par, n.chain_par)
acc_lb.df$chain <- rep(1:n.chain_par, each = n.iter_par)
mean(acc_lb.df$nn[acc_lb.df$idx > n.born.out.par]==TRUE)
mean(acc_lb.df$nn==TRUE)
?BiCopTau2Par
rm(acc_lb.df, depth_lb.df, like_df, like_df_thin, list_pred_lb, model, nt_lb.df, pl_dp, pl_like, pl_nl, pred_cond, pred_cond_mod, pred_cond_stat, pred_cond_thin,
pred_obs, pred_val, pred_val_vec, theta_true, pred_cond_summary, tree_stat_summary, conv_diag_sum)
rm(acc_lb.df, depth_lb.df, like_df, like_df_thin, list_pred_lb, model, nt_lb.df, pl_dp, pl_like, pl_nl, pred_cond, pred_cond_mod, pred_cond_stat, pred_cond_thin,
pred_obs, pred_val, pred_val_vec, theta_true, pred_cond_summary, tree_stat_summary, conv_diag_sum, pl_pred, plot_list, plot_list_adapt,
pred_cond_mod_avg,stat_list,stat_list_adapt)
gc()
source("~/Documents/GitHub/Copula-estimation-using-loss-based-BART/codes/ex_0_cond_copula_bayes_red.R")
plot_list$like
plot_list_adapt$like
rm(acc_lb.df, depth_lb.df, like_df, like_df_thin, list_pred_lb, model, nt_lb.df, pl_dp, pl_like, pl_nl, pred_cond, pred_cond_mod, pred_cond_stat, pred_cond_thin,
pred_obs, pred_val, pred_val_vec, theta_true, pred_cond_summary, tree_stat_summary, conv_diag_sum, pl_pred, plot_list, plot_list_adapt,
pred_cond_mod_avg,stat_list,stat_list_adapt)
n.tree <- 10
if(T){
test_case = 2
# model <- get(load(paste0("gauss_mcmc_",test_case,"_tree_",n.tree,"_adapt", ".Rdata")))
# rm(list = paste0("gauss_mcmc_",test_case,"_tree_",n.tree,"_adapt"))
model <- get(load(paste0("gauss_mcmc_",test_case,"_tree_",n.tree, ".Rdata")))
rm(list = paste0("gauss_mcmc_",test_case,"_tree_",n.tree))
list_pred_lb <- lapply(1:length(model$trees), \(idx) BART_calculate_pred(model$trees[[idx]], X_obs.norm))
pred_val = do.call(rbind,list_pred_lb)
rm(list_pred_lb)
pred_cond <- data.frame("obs" = rep(X_obs.norm, each = (n.chain_par * n.iter_par)))
pred_cond$theta_true = rep((get(paste0("tau_true_",test_case))), each = (n.chain_par * (n.iter_par)))
pred_cond$y = BiCopPar2Tau(1,link_gauss(as.vector(pred_val)))
pred_cond$chain = rep(rep(1:n.chain_par, each = n.iter_par),n)
pred_cond$idx = rep(rep(1:n.iter_par, n.chain_par),n)
pred_cond_mod = pred_cond %>%
filter(idx > n.born.out.par) %>%
group_by(obs, chain, theta_true) %>%
summarise(theta_mean = mean(y), theta_q975 = quantile(y, .975), theta_q025 = quantile(y, .025))
pred_cond_mod_avg = pred_cond_mod %>%
group_by(obs, theta_true) %>%
summarise(theta_mean = mean(theta_mean), theta_q975 = mean(theta_q975), theta_q025 = mean(theta_q025))
pl_pred <- ggplot(pred_cond_mod_avg) +
geom_point(aes(obs, theta_true), col = 2) +
geom_line(aes(obs, theta_mean)) +
geom_line(aes(obs, theta_q975), col = 3) +
geom_line(aes(obs, theta_q025), col = 3) +
xlab('X') +
ylab('estimated tau') +
theme_classic()
pred_cond_stat = pred_cond_mod_avg %>%
mutate(RMSE = ((theta_true - theta_mean)^2)) %>%
mutate(CI.length = (theta_q975 - theta_q025)) %>%
mutate(CI.cov = ((theta_true < theta_q975) & (theta_true > theta_q025))) %>%
dplyr::select(c(RMSE, CI.length, CI.cov))
pred_cond_summary = colMeans(pred_cond_stat[,-1])
# like
like_df <-data.frame("nn" = apply(pred_val, 1, function(x)loglik_gauss(link_gauss(x), get(paste0("copula_uu_gauss_",test_case))[,1], get(paste0("copula_uu_gauss_",test_case))[,2])))
like_df$idx <- rep(1:n.iter_par, n.chain_par)
like_df$chain <- rep(1:n.chain_par, each = n.iter_par)
pl_like <- like_df %>%
# filter(idx > n.born.out.par) %>%
ggplot(aes(x = idx, y = nn, color = factor(chain))) +
geom_line() +
labs(
x = "Iteration",
y = "Log-likelihood"
) +
guides(color = "none") +
theme_minimal()
library(patchwork)
pl_like +pl_pred
# nterm
nt_lb.df <- nterm_BART(model)
nt_lb.df$idx <- rep(1:n.iter_par, n.chain_par)
nt_lb.df$chain <- rep(1:n.chain_par, each = n.iter_par)
pl_nl <- nt_lb.df %>%
# filter(idx > n.born.out.par) %>%
ggplot(aes(x = idx, y = nn, color = factor(chain))) +
geom_line() +
labs(
x = "Iteration",
y = "nterm"
) +
guides(color = "none") +
theme_minimal()
pl_nl
# depth
depth_lb.df <- depth_BART(model)
depth_lb.df$idx <- rep(1:n.iter_par, n.chain_par)
depth_lb.df$chain <- rep(1:n.chain_par, each = n.iter_par)
pl_dp <- depth_lb.df %>%
# filter(idx > n.born.out.par) %>%
ggplot(aes(x = idx, y = nn, color = factor(chain))) +
geom_line() +
labs(
x = "Iteration",
y = "depth"
) +
guides(color = "none") +
theme_minimal()
pl_dp
pl_nl + pl_dp
# acceptance
acc_lb.df <- acc_BART(model)
acc_lb.df$idx <- rep(1:n.iter_par, n.chain_par)
acc_lb.df$chain <- rep(1:n.chain_par, each = n.iter_par)
tree_stat_summary = c(mean(nt_lb.df$nn[nt_lb.df$idx > n.born.out.par]), mean(depth_lb.df$nn[depth_lb.df$idx > n.born.out.par]), mean(acc_lb.df$nn[acc_lb.df$idx > n.born.out.par]==TRUE))
names(tree_stat_summary) <- c("nterm", "depth", "acc")
xtable(t(as.matrix(c(tree_stat_summary, pred_cond_summary))), digits = 4)
# conv_diag_sum <- cbind(conv_diag(depth_lb.df,n.born.out.par,10), conv_diag(nt_lb.df, n.born.out.par,10), conv_diag(like_df,n.born.out.par,10))
# xtable(conv_diag_sum)
# stat_list_adapt <- list("pred" = pred_cond_summary, "tree" = tree_stat_summary)
# plot_list_adapt <- list("like" = pl_like, "pred" = pl_pred, "depth" = pl_dp, "nterm" = pl_nl)
# save(stat_list_adapt, file = paste0("gauss_mcmc_",test_case,"_tree_",n.tree, "_stat_adapt.Rdata"))
# save(plot_list_adapt, file = paste0("gauss_mcmc_",test_case,"_tree_",n.tree, "_plot_adapt.Rdata"))
stat_list <- list("pred" = pred_cond_summary, "tree" = tree_stat_summary)
plot_list <- list("like" = pl_like, "pred" = pl_pred, "depth" = pl_dp, "nterm" = pl_nl)
save(stat_list, file = paste0("gauss_mcmc_",test_case,"_tree_",n.tree, "_stat.Rdata"))
save(plot_list, file = paste0("gauss_mcmc_",test_case,"_tree_",n.tree, "_plot.Rdata"))
}
pl_like +pl_pred
gc()
